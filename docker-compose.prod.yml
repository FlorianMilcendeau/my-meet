version: '3.7'

services:
    server-prod:
        container_name: server-prod
        restart: always
        build:
            context: ./nginx/prod
            dockerfile: Dockerfile.prod
        links:
            - api-prod
            - client-prod
        ports:
            - '80:80'
        networks:
            - sub-etha

    db-prod:
        image: 'mongo'
        container_name: 'db-prod'
        restart: always
        environment:
            - MONGO_INITDB_DATABASE=${DB_NAME}
            - MONGO_INITDB_ROOT_USERNAME=${DB_USER}
            - MONGO_INITDB_ROOT_PASSWORD=${DB_PASSWORD}
        volumes:
            - ./database/init-mongo.ts:/docker-entrypoint-initdb.d/init-mongo.ts:ro
            - ./database/mongo-volume:/data/db
        networks:
            - sub-etha
        ports:
            - 27017:27017

    api-prod:
        container_name: api-prod
        restart: always
        build:
            context: ./api/
            dockerfile: Dockerfile.prod
        volumes:
            - './api:/app'
            - '/app/node_modules'
        command: npm start
        links:
            - 'db-prod'
        environment:
            - DB_NAME=${DB_NAME}
            - DB_USER=${DB_USER}
            - DB_PASSWORD=${DB_PASSWORD}
            - DB_HOST=db-prod
            - NODE_ENV=production
        env_file:
            - ./api/.env
        networks:
            - sub-etha

    client-prod:
        container_name: client-prod
        restart: always
        build:
            context: ./client
            dockerfile: Dockerfile.prod
        volumes:
            - './client:/app'
            - '/app/node_modules'
        environment:
            - REACT_APP_SERVER_URL=${URL_SERVER}
            - NODE_ENV=production
        links:
            - 'api-prod'
        networks:
            - sub-etha

networks:
    sub-etha:
